source('~/Desktop/Github/CartoAnimations/R/linearInterpolation_Aus.R', echo=TRUE)
?carto_setup
source('~/Desktop/Github/CartoAnimations/R/linearInterpolation_Aus.R', echo=TRUE)
setup_key()
source('~/Desktop/Github/CartoAnimations/R/linearInterpolation_Aus.R', echo=TRUE)
library(rgdal)
library(rmarkdown)
render('Pollen_Mapper.Rmd')
library(rmarkdown)
render('Pollen_Mapper.Rmd')
library(rmarkdown)
render('Pollen_Mapper.Rmd')
#library(rmarkdown)
#render('Pollen_Mapper.Rmd')
library(neotoma)
library(dplyr)
library(httr)
library(devtools)
library(rCartoAPI)
species_datasets <- get_dataset(taxonname = 'Taxon*',
#  loc = c(add coordinates),
#  ageyoung = set age,
#  ageold = set age)
)
taxon_dataset_numbers <- as.numeric(names(taxon_datasets))
site_dataset_numbers = list()
site_dataset_numbers <- append(site_dataset_numbers, c(taxon_dataset_numbers))
species_datasets <- get_dataset(taxonname = 'Picea*',
#  loc = c(add coordinates),
#  ageyoung = set age,
#  ageold = set age)
)
#species_datasets <- get_dataset(taxonname = 'Picea*',
#  loc = c(add coordinates),
#  ageyoung = set age,
#  ageold = set age))
#picea_dataset_numbers <- as.numeric(names(picea_datasets))
#species_datasets <- get_dataset(taxonname = 'Taxon*',
#  loc = c(add coordinates),
#  ageyoung = set age,
#  ageold = set age))
#taxon_dataset_numbers <- as.numeric(names(taxon_datasets))
#species_datasets <- get_dataset(taxonname = 'Taxon*',
#  loc = c(add coordinates),
#  ageyoung = set age,
#  ageold = set age))
#taxon_dataset_numbers <- as.numeric(names(taxon_datasets))
species_datasets <- get_dataset(taxonname = 'Picea*',
loc = c(-130, 24, -34, 65),
ageyoung = 0,
ageold = -21,000)
picea_datasets <- get_dataset(taxonname = 'Picea*',
loc = c(-130, 24, -34, 65),
ageyoung = 0,
ageold = -21000)
picea_datasets <- get_dataset(taxonname = 'Picea*',
loc = c(-130, 24, -34, 65),
ageyoung = 0,
ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
picea_dataset_numbers <- as.numeric(names(picea_datasets))
site_dataset_numbers = list()
site_dataset_numbers <- append(site_dataset_numbers, c(picea_dataset_numbers))
all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
data_downloads <- get_download(all_dataset_numbers)
timefltr_output <- dplyr::filter (interp_dl, time >= -21000, time < 0)
final_output <- na.omit(timefltr_output)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
taxon = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE)/tot_cnts)
group_by(time, lat, long, site.name) %>%
summarize( species = mean (picea) * 100)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE)/tot_cnts)
group_by(time, lat, long, site.name) %>%
summarize( species = mean (picea) * 100)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE)/tot_cnts)
group_by(time, lat, long, site.name) %>%
summarize( picea = mean (picea) * 100)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
group_by(time, lat, long, site.name) %>%
summarize( picea = mean (picea) * 100)
# Removes any observations from over 21,000 years ago
timefltr_output <- dplyr::filter(interp_dl, time >= -21000)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#callitris = rowSums(comp_dl[, grep("Callitris*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100,
phyllocladus = mean ( phyllocladus) * 100,
casuarina = mean (casuarina) * 100,
# callitris = mean (callitris) * 100,
eucalyptus = mean (eucalyptus) * 100)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
#group_by(time, lat, long, site.name) %>%
summarize(picea = mean (picea) * 100)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
#group_by(time, lat, long, site.name) %>%
summarize(picea = mean(picea) * 100)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
#group_by(time, lat, long, site.name) %>%
#summarize(picea = mean(picea) * 100)
timefltr_output <- dplyr::filter (interp_dl, time >= -21000, time < 0)
final_output <- na.omit(timefltr_output)
#write.csv(final_output, file = "FILE_PATH.csv")
#inputFile <- "FILE_PATH.csv"
#This section posts the file you just created and saved locally to R
#your carto info
#carto_acc = "username"
#carto_api = "api key"
#optional:
#test_connection()
#Post the file!
#local_import(inputFile)
#tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
#interp_dl <- data.frame(comp_dl[,1:10],
#time = - (round(comp_dl$age / 500, 0) * 500),
#picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
#group_by(time, lat, long, site.name) %>%
#summarize(picea = mean(picea) * 100)
#timefltr_output <- dplyr::filter (interp_dl, time >= -21000, time < 0)
#final_output <- na.omit(timefltr_output)
#picea_datasets <- get_dataset(taxonname = 'Picea*',
# loc = c(-130, 24, -34, 65),
#  ageyoung = 0,
#  ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
#picea_dataset_numbers <- as.numeric(names(picea_datasets))
#picea_datasets <- get_dataset(taxonname = 'Picea*',
# loc = c(-130, 24, -34, 65),
#  ageyoung = 0,
#  ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
#picea_dataset_numbers <- as.numeric(names(picea_datasets))
#picea_datasets <- get_dataset(taxonname = 'Picea*',
# loc = c(-130, 24, -34, 65),
#  ageyoung = 0,
#  ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
#picea_dataset_numbers <- as.numeric(names(picea_datasets))
#picea_datasets <- get_dataset(taxonname = 'Picea*',
# loc = c(-130, 24, -34, 65),
#  ageyoung = 0,
#  ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
#picea_dataset_numbers <- as.numeric(names(picea_datasets))
#library(neotoma)
#library(dplyr)
#library(httr)
#library(devtools)
#library(rCartoAPI)
#taxon_datasets <- get_dataset(taxonname = 'Taxon*',
# loc = c(-130, 24, -34, 65),
#  ageyoung = 0,
#  ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
#taxon_dataset_numbers <- as.numeric(names(taxon_datasets))
#site_dataset_numbers = list()
#site_dataset_numbers <- append(site_dataset_numbers, c(taxon_dataset_numbers))
#all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
#data_downloads <- get_download(all_dataset_numbers)
#saveRDS(data_downloads, file = "FILE_PATH")
#site_dataset_numbers = list()
#site_dataset_numbers <- append(site_dataset_numbers, c(taxon_dataset_numbers))
#all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
#data_downloads <- get_download(all_dataset_numbers)
#saveRDS(data_downloads, file = "FILE_PATH")
#site_dataset_numbers = list()
#site_dataset_numbers <- append(site_dataset_numbers, c(taxon_dataset_numbers))
#all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
#data_downloads <- get_download(all_dataset_numbers)
#saveRDS(data_downloads, file = "FILE_PATH")
#site_dataset_numbers = list()
#site_dataset_numbers <- append(site_dataset_numbers, c(taxon_dataset_numbers))
#all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
#data_downloads <- get_download(all_dataset_numbers)
#saveRDS(data_downloads, file = "FILE_PATH")
library(rmarkdown)
render('Pollen_Mapper.Rmd')
source('~/Desktop/Github/CartoAnimations/R/NAmerica.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/NAmerica.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/NAmerica.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/NAmerica.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/NAmerica.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/linearInterpolation_NA.R', echo=TRUE)
source('~/Desktop/blub.R', echo=TRUE)
source('~/Desktop/blub.R', echo=TRUE)
source('~/Desktop/blub.R', echo=TRUE)
source('~/Desktop/blubinter.R', echo=TRUE)
?comp_dl
??comp_dl
comp_d?
?round
??round
?else
??else
?rowSums
str(interp_dl)
?vaccinium
??vaccinium
print(summary(interp_dl))
print(summary(interp_dl))
print(summary(interp_dl))
source('~/Desktop/Github/CartoAnimations/R/linearInterpolation_NA_BIN.R', echo=TRUE)
print(summary(interp_dl))
# Removes any observations from over 21,000 years ago
timefltr_output <- dplyr::filter(interp_dl, time >= -21000, time <= 0)
?breaks
??breaks
interp_dl <- data.frame(comp_dl[,1:10],
time = cut(comp_dl$age, breaks = -18000, -17000, -16000 -15000, -14000, -13500, -12750, -12000, -11000, -10250, -10000, -9000, -8000, -7000 -6000, -5000),
# time = - (round(comp_dl$age / 500, 0) * 500),
alnus = rowSums(comp_dl[, grep("Alnus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
fagus = rowSums(comp_dl[, grep("Fagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
pinus = rowSums(comp_dl[, grep("Pinus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
quercus = rowSums(comp_dl[, grep("Quercus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
tsuga = rowSums(comp_dl[, grep("Tsuga*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
ulmus = rowSums(comp_dl[, grep("Ulmus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
ambrosia = rowSums(comp_dl[, grep("Ambrosia*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
cyperaceae = rowSums(comp_dl[, grep("Cyperaceae*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
poaceae = rowSums(comp_dl[, grep("Poaceae*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)%>%
group_by(time, lat, long, site.name) %>%
summarize( alnus = mean ( alnus) * 100,
fagus = mean ( fagus) * 100,
picea = mean ( picea) * 100,
pinus = mean ( pinus) * 100,
quercus = mean (quercus) * 100,
tsuga = mean (tsuga) * 100,
ulmus = mean ( ulmus) * 100,
ambrosia = mean ( ambrosia) * 100,
cyperaceae = mean ( cyperaceae) * 100,
poaceae = mean ( poaceae) * 100)
# Removes any observations from over 21,000 years ago
timefltr_output <- dplyr::filter(interp_dl, time >= -21000, time <= 0)
final_output <- na.omit(timefltr_output)
#bins time according to ice sheet values
cut(interp_dl, breaks = c(-21000, -18000, -17000, -16000 -15000, -14000, -13500, -12750, -12000, -11000, -10250, -10000, -9000, -8000, -7000 -6000, -5000, 0))
# Removes any observations from over 21,000 years ago
timefltr_output <- dplyr::filter(interp_dl, time >= -21000, time <= 0)
#bins time according to ice sheet values
cut(time, breaks = c(-21000, -18000, -17000, -16000 -15000, -14000, -13500, -12750, -12000, -11000, -10250, -10000, -9000, -8000, -7000 -6000, -5000, 0))
#bins time values according to ice sheet intervals
cut(comp_dl$age, breaks = c(-21000, -18000, -17000, -16000 -15000, -14000, -13500, -12750, -12000, -11000, -10250, -10000, -9000, -8000, -7000 -6000, -5000, 0))
interp_dl <- data.frame(comp_dl[,1:10],
time = (comp_dl$age),
# time = - (round(comp_dl$age / 500, 0) * 500),
alnus = rowSums(comp_dl[, grep("Alnus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
fagus = rowSums(comp_dl[, grep("Fagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
pinus = rowSums(comp_dl[, grep("Pinus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
quercus = rowSums(comp_dl[, grep("Quercus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
tsuga = rowSums(comp_dl[, grep("Tsuga*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
ulmus = rowSums(comp_dl[, grep("Ulmus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
ambrosia = rowSums(comp_dl[, grep("Ambrosia*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
cyperaceae = rowSums(comp_dl[, grep("Cyperaceae*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
poaceae = rowSums(comp_dl[, grep("Poaceae*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)%>%
group_by(time, lat, long, site.name) %>%
summarize( alnus = mean ( alnus) * 100,
fagus = mean ( fagus) * 100,
picea = mean ( picea) * 100,
pinus = mean ( pinus) * 100,
quercus = mean (quercus) * 100,
tsuga = mean (tsuga) * 100,
ulmus = mean ( ulmus) * 100,
ambrosia = mean ( ambrosia) * 100,
cyperaceae = mean ( cyperaceae) * 100,
poaceae = mean ( poaceae) * 100)
# Removes any observations from over 21,000 years ago
timefltr_output <- dplyr::filter(interp_dl, time >= -21000, time <= 0)
interp_dl <- data.frame(comp_dl[,1:10],
time,
alnus = rowSums(comp_dl[, grep("Alnus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
fagus = rowSums(comp_dl[, grep("Fagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
pinus = rowSums(comp_dl[, grep("Pinus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
quercus = rowSums(comp_dl[, grep("Quercus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
tsuga = rowSums(comp_dl[, grep("Tsuga*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
ulmus = rowSums(comp_dl[, grep("Ulmus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
ambrosia = rowSums(comp_dl[, grep("Ambrosia*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
cyperaceae = rowSums(comp_dl[, grep("Cyperaceae*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
poaceae = rowSums(comp_dl[, grep("Poaceae*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)%>%
group_by(time, lat, long, site.name) %>%
summarize( alnus = mean ( alnus) * 100,
fagus = mean ( fagus) * 100,
picea = mean ( picea) * 100,
pinus = mean ( pinus) * 100,
quercus = mean (quercus) * 100,
tsuga = mean (tsuga) * 100,
ulmus = mean ( ulmus) * 100,
ambrosia = mean ( ambrosia) * 100,
cyperaceae = mean ( cyperaceae) * 100,
poaceae = mean ( poaceae) * 100)
interp_dl <- data.frame(comp_dl[,1:11],
time,
alnus = rowSums(comp_dl[, grep("Alnus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
fagus = rowSums(comp_dl[, grep("Fagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
picea = rowSums(comp_dl[, grep("Picea*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
pinus = rowSums(comp_dl[, grep("Pinus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
quercus = rowSums(comp_dl[, grep("Quercus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
tsuga = rowSums(comp_dl[, grep("Tsuga*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
ulmus = rowSums(comp_dl[, grep("Ulmus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
ambrosia = rowSums(comp_dl[, grep("Ambrosia*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
cyperaceae = rowSums(comp_dl[, grep("Cyperaceae*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
poaceae = rowSums(comp_dl[, grep("Poaceae*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)%>%
group_by(time, lat, long, site.name) %>%
summarize( alnus = mean ( alnus) * 100,
fagus = mean ( fagus) * 100,
picea = mean ( picea) * 100,
pinus = mean ( pinus) * 100,
quercus = mean (quercus) * 100,
tsuga = mean (tsuga) * 100,
ulmus = mean ( ulmus) * 100,
ambrosia = mean ( ambrosia) * 100,
cyperaceae = mean ( cyperaceae) * 100,
poaceae = mean ( poaceae) * 100)
cut(time, breaks = c(-18000, -17000, -16000, -15000, -14000, -13500, -12750, -12000, -11000, -10250, -10000, -9000, -8000, -7000 -6000, -5000, 0))
cut(,time, breaks = c(-18000, -17000, -16000, -15000, -14000, -13500, -12750, -12000, -11000, -10250, -10000, -9000, -8000, -7000 -6000, -5000, 0))
cut(time, breaks = c(-18000, -17000, -16000, -15000, -14000, -13500, -12750, -12000, -11000, -10250, -10000, -9000, -8000, -7000 -6000, -5000, 0))
library(rmarkdown)
render('Pollen_Mapper.Rmd')
library(neotoma)
library(dplyr)
library(httr)
library(devtools)
library(rCartoAPI)
nothofagus_datasets <- get_dataset(taxonname = 'Nothofagus*',
loc = c(105, -51, 177, 10),
ageyoung = 0,
ageold = 21000)
eucalyptus_datasets <- get_dataset(taxonname = 'Eucalyptus*',
loc = c(105, -51, 177, 10),
ageyoung = 0,
ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
nothofagus_dataset_numbers <- as.numeric(names(nothofagus_datasets))
eucalyptus_dataset_numbers <- as.numeric(names(eucalyptus_datasets))
site_dataset_numbers = list()
site_dataset_numbers <- append(site_dataset_numbers, c(nothofagus_dataset_numbers,
eucalyptus_dataset_numbers))
all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
data_downloads <- get_download(all_dataset_numbers)
saveRDS(data_downloads, file = "FILE_PATH")
data_downloads <- readRDS("FILE_PATH.")
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
library(neotoma)
library(dplyr)
library(httr)
library(devtools)
library(rCartoAPI)
nothofagus_datasets <- get_dataset(taxonname = 'Nothofagus*',
loc = c(105, -51, 177, 10),
ageyoung = 0,
ageold = 21000)
eucalyptus_datasets <- get_dataset(taxonname = 'Eucalyptus*',
loc = c(105, -51, 177, 10),
ageyoung = 0,
ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
nothofagus_dataset_numbers <- as.numeric(names(nothofagus_datasets))
eucalyptus_dataset_numbers <- as.numeric(names(eucalyptus_datasets))
site_dataset_numbers = list()
site_dataset_numbers <- append(site_dataset_numbers, c(nothofagus_dataset_numbers,
eucalyptus_dataset_numbers))
all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
data_downloads <- get_download(all_dataset_numbers)
library(neotoma)
library(dplyr)
library(httr)
library(devtools)
library(rCartoAPI)
nothofagus_datasets <- get_dataset(taxonname = 'Nothofagus*',
loc = c(105, -51, 177, 10),
ageyoung = 0,
ageold = 21000)
eucalyptus_datasets <- get_dataset(taxonname = 'Eucalyptus*',
loc = c(105, -51, 177, 10),
ageyoung = 0,
ageold = 21000)
#can_datasets <- neotoma::get_dataset(datasettype = 'pollen',
#ageold = 15000, ageyoung = -100,
#gpid = "Canada")
nothofagus_dataset_numbers <- as.numeric(names(nothofagus_datasets))
eucalyptus_dataset_numbers <- as.numeric(names(eucalyptus_datasets))
site_dataset_numbers = list()
site_dataset_numbers <- append(site_dataset_numbers, c(nothofagus_dataset_numbers,
eucalyptus_dataset_numbers))
all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
data_downloads <- get_download(all_dataset_numbers)
saveRDS(data_downloads, file = "~/Desktop/Neotoma.RData")
data_downloads <- readRDS("~/Desktop/Neotoma.RData")
comp_dl <- compile_downloads(data_downloads)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100,
eucalyptus = mean ( eucalyptus) * 100)
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100,
eucalyptus = mean (eucalyptus) * 100)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#callitris = rowSums(comp_dl[, grep("Callitris*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100,
phyllocladus = mean ( phyllocladus) * 100,
casuarina = mean (casuarina) * 100,
# callitris = mean (callitris) * 100,
eucalyptus = mean (eucalyptus) * 100)
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100,
eucalyptus = mean (eucalyptus) * 100)
?group_by
group_by(time, lat, long, site.name) %>%
summarize(nothofagus = mean (nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100)
library(dplyr)
dplyr::group_by(time, lat, long, site.name) %>%
summarize(nothofagus = mean (nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100)
View(interp_dl)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)
View(interp_dl)
dplyr::group_by(time, lat, long, site.name) %>%
summarize(nothofagus = mean (nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100)
View(interp_dl)
class(interp_dl)
dplyr::group_by(time, lat, long, site.name) %>% summarize(nothofagus = mean (nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#callitris = rowSums(comp_dl[, grep("Callitris*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100,
phyllocladus = mean ( phyllocladus) * 100,
casuarina = mean (casuarina) * 100,
# callitris = mean (callitris) * 100,
eucalyptus = mean (eucalyptus) * 100)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts)  %>%
dplyr::group_by(time, lat, long, site.name) %>%
summarize(nothofagus = mean (nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100)
write.csv(final_output, file = "~/Desktop/Neotoma.csv")
inputFile <- "~/Desktop/Neotoma.csv"
#This section posts the file you just created and saved locally to R
#our carto info
carto_acc = "username"
carto_api = "api key"
#optional:
#test_connection()
#Post the file!
local_import(inputFile)
