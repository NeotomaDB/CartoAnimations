source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
#Making hist() fancier:
hist(spiderspeeds,
main = "Frequency Histogram of Spider Speeds",
xlab = "cm/s",
border = "black",
col = "blue",
xlim = c(0,4),
las = 0.5,
breaks = 5)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
spiderspeeds_df[2]
spiderspeeds_df[,2]
spiderspeeds_df[2,]
ggplot(spiderspeeds, aes(x = cm/s)) + geom_histogram()
ggplot(spiderspeeds, aes(x = cm/s)) + geom_histogram()
ggplot(spiderspeeds_df, aes(x = cm/s)) + geom_histogram()
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
#using the hist function
hist(spiderspeeds)
debugSource('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
is.foo
is.foo(spiderspeeds)
is.spiderspeeds
is.spiderspeeds
is.(spiderspeeds)
is.numeric()
is.numeric(spiderspeeds)
is.vector(spiderspeeds)
is.data.frame(spiderspeeds)
is.data.frame(spiderspeeds_df)
spiderspeeds_df <- data.frame(spiderspeeds)
library(ggplot2)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
ggplot(data = speed) + geom_histogram(aes(x = speed )
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
ggplot(data = speed) + geom_histogram(aes(x = speed))
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
geom_density(aes(x = Speed), linetype = 1)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
ggplot(data = speed_df) + geom_histogram(aes(x = Speed),
bins = 6, color = 'darkgoldenrod1', fill = "goldenrod")
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
ggplot(data = speed_df) + geom_histogram(aes(x = Speed),
bins = 9, color = 'darkgoldenrod1', fill = "goldenrod")
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
mean(Speed)
sd(Speed)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
quarters(Speed)
quartiles(Speed)
quartile(Speed)
#calculating quartiles
quantile(Speed)
#range
range(Speed)
#IQR
IQR(Speed)
#boxplot
# Notched Boxplot of Tooth Growth Against 2 Crossed Factors
# boxes colored for ease of interpretation
boxplot(len~supp*Speed, data=speed_df, notch=TRUE,
col=(c("gold","darkgreen")),
main="Speed", xlab="cm/s")
#boxplot
# Notched Boxplot of Tooth Growth Against 2 Crossed Factors
# boxes colored for ease of interpretation
boxplot(Speed, data=speed_df, notch=TRUE,
col=(c("gold","darkgreen")),
main="Speed", xlab="cm/s")
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
#boxplot
# Notched Boxplot of Tooth Growth Against 2 Crossed Factors
# boxes colored for ease of interpretation
boxplot(*Speed, data=speed_df, notch=FALSE,
col=(c("gold","darkgreen")),
main="Speed", xlab="cm/s")
ggplot(data = speed_df) + geom_histogram(aes(x = Speed),
bins = 8, color = 'darkgoldenrod4', fill = "goldenrod3",
xlab = "cm/s")
ggplot(data = speed_df) + geom_histogram(aes(x = Speed),
bins = 8, color = 'darkgoldenrod4', fill = "goldenrod3",
)
#boxplot
# Notched Boxplot of Tooth Growth Against 2 Crossed Factors
# boxes colored for ease of interpretation
boxplot(Speed, data=speed_df, notch=FALSE,
col=(c("gold","darkgreen")),
main="Speed", xlab="cm/s")
#boxplot
# Notched Boxplot of Tooth Growth Against 2 Crossed Factors
# boxes colored for ease of interpretation
boxplot(Speed, data=speed_df, notch=TRUE,
col=(c("gold","darkgreen")),
main="Speed", xlab="cm/s")
#Boxplottn
boxplot(Speed, data=speed_df, notch=TRUE,
col=(c("gold","deepseagreen")),
main="Speed", xlab="cm/s")
#Boxplottn
boxplot(Speed, data=speed_df, notch=TRUE,
col=(c("gold","darkslategrey")),
main="Speed", xlab="cm/s")
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
ggplot(speed_df, aes(group = Speed)) + geom_boxplot() +
ylab("cm/s") +
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/R/Stat371/Homework1.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/Europe.R', echo=TRUE)
# Loads packages
library(neotoma)
.libPaths(neotoma)
search()
install.packages("neotoma")
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
northofagus_datasets <- get_dataset(taxonname = 'Nothofagus*',
# Records dataset metadata for the below taxon in specifiied location and
northofagus_datasets <- get_dataset(taxonname = 'Nothofagus*',
loc = c(111, 10, -179, -47),
ageyoung = 0,
ageold = 21000)
# Records dataset metadata for the below taxon in specifiied location and
northofagus_datasets <- get_dataset(taxonname = 'Nothofagus*',
loc = c(111, 10, -179, -47),
ageyoung = 0,
ageold = 21000)
? get_dataset()
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
? get_dataset
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
View(tree_downloads)
# Records dataset metadata for the below taxon in specifiied location and
phyllocladus_datasets <- get_dataset(taxonname = 'Phyllocladus*',
loc = c(-177, -51, 105, 10),
ageyoung = 0,
ageold = 21000)
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
# Records dataset metadata for the below taxon in specifiied location and
callitris_datasets <- get_dataset(taxonname = 'Callitris',
loc = c(-177, -51, 105, 10),
ageyoung = 0,
ageold = 21000)
# Creates list of callitris dataset numbers
callitris_dataset_numbers <- as.numeric(names(callitris_datasets))
View(northofagus_datasets)
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
# This code downloads datasets from Neotoma
# Written by Anna George, 2019
#Australia attempted by Syd, 1/25, but she doesn't really know what's up...
# Loads packages
library(neotoma)
# Figure out your bounding box:
# You can use https://boundingbox.klokantech.com/
# North America bounding box: loc = c(-130, 24, -34, 65)
# Europe bounding box: loc = c(-11, 35, 47, 72)
# Australian bounding box: loc = c(-177, -51, 105, 10)
# Australian box optimized to include NZ, but not all of Oceana
# Choose interesting taxa:
# NA pollen taxa: Fagus, Picea, Quercus, Spruce, Tsuga
# European pollen taxa: Alnus, Fagus, Picea, Quercus, Spruce
# Australian pollen taxa: Nothofagus, Eucalyptus, Casuarina, Callitris, Phyllocladus
# Mammal taxa: Bison, Smilodon/Panthera, Equus, Rodentia, Mammut, Mammuthus
# Records dataset metadata for the below taxon in specifiied location and
nothofagus_datasets <- get_dataset(taxonname = 'Nothofagus*',
loc = c(-177, -51, 105, 10),
ageyoung = 0,
ageold = 21000)
# Creates list of Nothofagus dataset numbers
nothofagus_dataset_numbers <- as.numeric(names(nothofagus_datasets))
# Records dataset metadata for the below taxon in specifiied location and
eucalyptus_datasets <- get_dataset(taxonname = 'Eucalyptus*',
loc = c(-177, -51, 105, 10),
ageyoung = 0,
ageold = 21000)
# Creates list of eucalyptus dataset numbers
eucalyptus_dataset_numbers <- as.numeric(names(eucalyptus_datasets))
# Records dataset metadata for the below taxon in specifiied location and
casuarina_datasets <- get_dataset(taxonname = 'Casuarina*',
loc = c(-177, -51, 105, 10),
ageyoung = 0,
ageold = 21000)
# Creates list of casuarina dataset numbers
casuarina_dataset_numbers <- as.numeric(names(casuarina_datasets))
# # Records dataset metadata for the below taxon in specifiied location and
# callitris_datasets <- get_dataset(taxonname = 'Callitris',
#                               loc = c(-177, -51, 105, 10),
#                               ageyoung = 0,
#                               ageold = 21000)
# # Creates list of callitris dataset numbers
# callitris_dataset_numbers <- as.numeric(names(callitris_datasets))
# Records dataset metadata for the below taxon in specifiied location and
phyllocladus_datasets <- get_dataset(taxonname = 'Phyllocladus*',
loc = c(-177, -51, 105, 10),
ageyoung = 0,
ageold = 21000)
# Creates list of pyllocladus dataset numbers
phyllocladus_dataset_numbers <- as.numeric(names(phyllocladus_datasets))
# Creates empty list
site_dataset_numbers = list()
# Combines lists of different taxa dataset numbers
site_dataset_numbers <- append(site_dataset_numbers, c(nothofagus_dataset_numbers,
eucalyptus_dataset_numbers,
casuarina_dataset_numbers,
#callitris_dataset_numbers,
phyllocladus_dataset_numbers))
# Removes duplicate dataset numbers
all_dataset_numbers <- as.numeric(unique(site_dataset_numbers))
# Downloads datasets
tree_downloads <- get_download(all_dataset_numbers)
# Saves datasets as an R dataset file
# So you won't have to redownload all the sites
saveRDS(tree_downloads, file = "Australia_sites.RData")
#you can move this by creating a folder and moving it.
# Records dataset metadata for the below taxon in specifiied location and
cupressaceae_datasets <- get_dataset(taxonname = 'Cupressaceae*',
loc = c(-177, -51, 105, 10),
ageyoung = 0,
ageold = 21000)
# Creates list of callitris dataset numbers
cupressaceae_dataset_numbers <- as.numeric(names(cupressaceae_datasets))
View(cupressaceae_datasets)
View(cupressaceae_datasets[["3052"]][["dataset.meta"]])
View(cupressaceae_datasets[["3052"]][["site.data"]])
cupressaceae_datasets[["3052"]][["pi.data"]]
cupressaceae_datasets[["3052"]][["submission"]][["submission.type"]]
cupressaceae_datasets[["3052"]][["site.data"]][["long.acc"]]
get_download(cupressaceae_datasets)
get_download(cupressaceae_dataset_numbers)
cupressaceae_datasets[["18104"]][["site.data"]]
cupressaceae_downloads <- get_download(cupressaceae_dataset_numbers)
cupressaceae_downloads
View(cupressaceae_downloads)
cupressaceae_downloads[["3052"]][["counts"]]
cupressaceae_downloads[["3052"]][["taxon.list"]][["taxon.name"]]
source('~/Desktop/Github/CartoAnimations/R/linearInterpolation.R', echo=TRUE)
# Loads downloaded RData object
# See downloadDatasets.R to download datasets
load("/Users/sydneywidell/Desktop/DataForSyd/Australia_sites.RData")
# Loads downloaded RData object
# See downloadDatasets.R to download datasets
load("/Desktop/DataForSyd/Australia_sites.RData")
load("/Users/sydneywidell/Desktop/DataForSyd/Australia_sites.RData")
source('~/Desktop/Github/CartoAnimations/R/Australia.R', echo=TRUE)
# Saves datasets as an R dataset file
# So you won't have to redownload all the sites
saveRDS(tree_downloads, file = "sydneywidell/Desktop/DataForSyd/Australia_sites.RData")
? saveRDS
# Saves datasets as an R dataset file
# So you won't have to redownload all the sites
saveRDS(tree_downloads, file = "~/Desktop/DataForSyd/Australia_sites.RData")
# Loads downloaded RData object
# See downloadDatasets.R to download datasets
load("~/Desktop/DataForSyd/Australia_sites.RData")
# Loads downloaded RData object
# See downloadDatasets.R to download datasets
source("~/Desktop/DataForSyd/Australia_sites.RData")
# Loads downloaded RData object
# See downloadDatasets.R to download datasets
source("~/Desktop/DataForSyd/Australia_sites.RData")
# Saves datasets as an R dataset file
# So you won't have to redownload all the sites
saveRDS(tree_downloads, file = "~/Desktop/DataForSyd/Australia_sites.RData")
# Loads downloaded RData object
# See downloadDatasets.R to download datasets
source("~/Desktop/DataForSyd/Australia_sites.RData")
?source
saveRDS(tree_downloads, file = "Australia_sites.RData")
source("Australia_sites.RData")
load("Australia_sites.RData")
View(tree_downloads)
# Saves datasets as an R dataset file
# So you won't have to redownload all the sites
saveRDS(tree_downloads, file = "~/Desktop/DataForSyd/Australia_sites.RData")
readRDS("~/Desktop/DataForSyd/Australia_sites.RData")
readRDS("~/Desktop/DataForSyd/Australia_sites.RData")
tree_downloads <- readRDS("~/Desktop/DataForSyd/Australia_sites.RData")
# Creates one spreadsheet of all downloads
comp_dl <- compile_downloads(tree_downloads)
# Gets total counts for each observation at each site
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothoagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100,  phyllocladus = mean ( phyllocladus) * 100)
# Australian pollen taxa: Nothofagus, Eucalyptus, Casuarina, (Callitris), Phyllocladus
# Linearly interpolates each taxa in bins of 500 years
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothoagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100,  phyllocladus = mean ( phyllocladus) * 100)
# Australian pollen taxa: Nothofagus, Eucalyptus, Casuarina, (Callitris), Phyllocladus
# Linearly interpolates each taxa in bins of 500 years
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothoagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100,  phyllocladus = mean ( phyllocladus) * 100)
# Australian pollen taxa: Nothofagus, Eucalyptus, Casuarina, (Callitris), Phyllocladus
# Linearly interpolates each taxa in bins of 500 years
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothoagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100,  phyllocladus = mean ( phyllocladus) * 100)
source('~/Desktop/Github/CartoAnimations/R/linearInterpolation.R', echo=TRUE)
View(comp_dl)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothoagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100,  phyllocladus = mean ( phyllocladus) * 100)
eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts
comp_dl[, grep("Eucalyptus*", colnames(comp_dl))]
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothoagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100,  phyllocladus = mean ( phyllocladus) * 100)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothoagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100,  phyllocladus = mean ( phyllocladus) * 100)
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothoagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, phyllocladus = mean ( phyllocladus) * 100) #eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100)
View(interp_dl)
# Removes any observations from over 21,000 years ago
timefltr_output <- dplyr::filter(interp_dl, time >= -21000)
final_output <- na.omit(timefltr_output)
# Writes CSV file
# Specify location of file via a file path, i.e. file = "home/Code/CartoInputFile"
write.csv(final_output, file = "CartoInput_NA_V3.csv")
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, phyllocladus = mean ( phyllocladus) * 100) #eucalyptus = mean (eucalyptus) * 100, casuarina = mean (casuarina) * 100)
# Removes any observations from over 21,000 years ago
timefltr_output <- dplyr::filter(interp_dl, time >= -21000)
final_output <- na.omit(timefltr_output)
# Writes CSV file
# Specify location of file via a file path, i.e. file = "home/Code/CartoInputFile"
write.csv(final_output, file = "CartoInput_NA_V3.csv")
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, phyllocladus = mean ( phyllocladus) * 100, casuarina = mean (casuarina) * 100) #eucalyptus = mean (eucalyptus) * 100
interp_dl <- data.frame(comp_dl[,1:10],
time = - (round(comp_dl$age / 500, 0) * 500),
nothofagus = rowSums(comp_dl[, grep("Nothofagus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#eucalyptus = rowSums(comp_dl[, grep("Eucalyptus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
#casuarina = rowSums(comp_dl[, grep("Casuarina*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts,
phyllocladus = rowSums(comp_dl[, grep("Phyllocladus*", colnames(comp_dl))], na.rm = TRUE) / tot_cnts) %>%
group_by(time, lat, long, site.name) %>%
summarize( nothofagus = mean ( nothofagus) * 100, phyllocladus = mean ( phyllocladus) * 100) #casuarina = mean (casuarina) * 100) #eucalyptus = mean (eucalyptus) * 100
final_output <- na.omit(timefltr_output)
# Writes CSV file
# Specify location of file via a file path, i.e. file = "home/Code/CartoInputFile"
write.csv(final_output, file = "CartoInput_NA_V3.csv")
source('~/Desktop/Github/CartoAnimations/R/Europe.R', echo=TRUE)
# Loads packages
library(neotoma)
# Loads packages
library(neotoma)
# Loads packages
library(neotoma)
# Records dataset metadata for the below taxon in specifiied location and
alnus_datasets <- get_dataset(taxonname = 'Alnus*',
loc = c(-11, 35, 47, 72),
ageyoung = 0,
ageold = 21000)
# Creates list of picea dataset numbers
alnus_dataset_numbers <- as.numeric(names(alnus_datasets))
source('~/Desktop/Github/CartoAnimations/R/Europe.R', echo=TRUE)
library(httr)
tree_downloads <- readRDS("Europe_sites.RData")
# Creates one spreadsheet of all downloads
comp_dl <- compile_downloads(tree_downloads)
# Gets total counts for each observation at each site
tot_cnts <- rowSums(comp_dl[,11:ncol(comp_dl)], na.rm=TRUE)
#resp<-POST(apiurl, body=upload_file("CartoInput_NA_V3.csv"), encode="multipart")
#content(resp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
